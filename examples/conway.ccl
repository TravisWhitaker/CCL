proc conway:get-nb x y {
	copy [$x | sub 1] 3 & [
		copy [$y | sub 1] 3 | fold 0 $add
	] | fold 0 $add | sub [; get $x | get $y]
};

proc conway:step {
	local grid;
	$grid & copy | local grid2;
	size | loop {
		local x;
		$grid | get [;] | size | loop {
			local y;
			$grid | conway:get-nb $x $y | local n;
			if [$grid | get $x | get $y | eq 0] {
				$grid2 | get $x | set $y [if [$n | eq 3] {1} {0}]
			} {
				$grid2 | get $x | set $y [if [$n | eq 2 | or [$n | eq 3]] {1} {0}]
			}
		}
	}; $grid2
};

proc conway:print {
	each {
		fold [arg x ""] {prepend $x} | print
	};
};

proc conway:gen x y {
	$x | loop {$y | loop {2 | rand}}
};

conway:gen 20 40 | local grid;
50 | loop {
	"gen $[]" | print;
	$grid | conway:step | var grid | conway:print;
};